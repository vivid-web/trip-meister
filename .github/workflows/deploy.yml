name: 🚀 Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, closed]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_REGION: ams
  FLY_ORG: vivid-web
  TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
  TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}

jobs:
  review_app:
    name: 🚀 Deploy review app
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' }}
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    concurrency:
      group: pr-${{ github.event.number }}
    environment:
      name: Review app
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: ▫️ Setup pnpm
        uses: pnpm/action-setup@v4.1.0

      - name: ⎔ Setup node
        uses: actions/setup-node@v4.2.0
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: 📥 Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile

      - name: 🗄 Create database
        id: create_database
        uses: vivid-web/turso-pr-review-apps@v0.0.6
        with:
          organization: ${{ secrets.TURSO_ORGANIZATION_NAME }}
          api_token: ${{ secrets.TURSO_API_TOKEN }}
          db_name: trip-meister-pr-${{ github.event.number }}

      - name: 🚀 Deploy PR app to Fly
        id: deploy
        uses: superfly/fly-pr-review-apps@1.3.0
        with:
          secrets: >-
            TURSO_DATABASE_URL=libsql://${{ steps.create_database.outputs.hostname }}
            TURSO_AUTH_TOKEN=${{ steps.create_database.outputs.token }}

      - name: 🔄 Migrate database
        run: pnpm db:migrate
        env:
          TURSO_DATABASE_URL: libsql://${{ steps.create_database.outputs.hostname }}
          TURSO_AUTH_TOKEN: ${{ steps.create_database.outputs.token }}

  production:
    name: 🚀 Deploy production
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'push' }}
    environment:
      name: Production
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: ▫️ Setup pnpm
        uses: pnpm/action-setup@v4.1.0

      - name: ⎔ Setup node
        uses: actions/setup-node@v4.2.0
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: 📥 Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@1.5

      - name: 🚀 Deploy Production
        run: flyctl deploy --remote-only

      - name: 🏗 Migrate database
        run: pnpm db:migrate
